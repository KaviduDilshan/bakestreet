"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@rollup/pluginutils"),e=require("fs"),n=require("fs/promises"),i=require("os"),r=require("path"),s=require("tar-mini"),o=require("util"),a=require("zlib");function u(t){return t&&t.__esModule?t:{default:t}}var l=u(e),c=u(n),p=u(i),f=u(r),d=u(o),h=u(a);function g(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var m,w={exports:{}};function y(){if(m)return w.exports;m=1;let t,e,n,{defineProperty:i,setPrototypeOf:r,create:s,keys:o}=Object,a="",{round:u,max:l}=Math,c=t=>{let e=/([a-f\d]{3,6})/i.exec(t)?.[1],n=e?.length,i=parseInt(6^n?3^n?"0":e[0]+e[0]+e[1]+e[1]+e[2]+e[2]:e,16);return[i>>16&255,i>>8&255,255&i]},p=(t,e,n)=>t^e||e^n?16+36*u(t/51)+6*u(e/51)+u(n/51):8>t?16:t>248?231:u(24*(t-8)/247)+232,f=t=>{let e,n,i,r,s;return 8>t?30+t:16>t?t-8+90:(232>t?(s=(t-=16)%36,e=(t/36|0)/5,n=(s/6|0)/5,i=s%6/5):e=n=i=(10*(t-232)+8)/255,r=2*l(e,n,i),r?30+(u(i)<<2|u(n)<<1|u(e))+(2^r?0:60):30)},d=(()=>{let n=t=>s.some((e=>t.test(e))),i=globalThis,r=i.process??{},s=r.argv??[],a=r.env??{},u=-1;try{t=","+o(a).join(",")}catch(t){a={},u=0}let l="FORCE_COLOR",c={false:0,0:0,1:1,2:2,3:3}[a[l]]??-1,p=l in a&&c||n(/^--color=?(true|always)?$/);return p&&(u=c),~u||(u=((n,i,r)=>(e=n.TERM,{"24bit":3,truecolor:3,ansi256:2,ansi:1}[n.COLORTERM]||(n.CI?/,GITHUB/.test(t)?3:1:i&&"dumb"!==e?r?3:/-256/.test(e)?2:1:0)))(a,!!a.PM2_HOME||a.NEXT_RUNTIME?.includes("edge")||!!r.stdout?.isTTY,"win32"===r.platform)),!c||a.NO_COLOR||n(/^--(no-color|color=(false|never))$/)?0:i.window?.chrome||p&&!u?3:u})(),h={open:a,close:a},g=39,y=49,b={},O=({p:t},{open:e,close:i})=>{let s=(t,...n)=>{if(!t){if(e&&e===i)return e;if((t??a)===a)return a}let r,o=t.raw?String.raw({raw:t},...n):a+t,u=s.p,l=u.o,c=u.c;if(o.includes(""))for(;u;u=u.p){let{open:t,close:e}=u,n=e.length,i=a,s=0;if(n)for(;~(r=o.indexOf(e,s));s=r+n)i+=o.slice(s,r)+t;o=i+o.slice(s)}return l+(o.includes("\n")?o.replace(/(\r?\n)/g,c+"$1"+l):o)+c},o=e,u=i;return t&&(o=t.o+e,u=i+t.c),r(s,n),s.p={open:e,close:i,o:o,c:u,p:t},s.open=o,s.close=u,s};const v=function(t=d){let e={Ansis:v,isSupported:()=>o,strip:t=>t.replace(/[Â›][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,a),extend(t){for(let e in t){let n=t[e],r=(typeof n)[0],s="s"===r?P(...c(n)):n;b[e]="f"===r?{get(){return(...t)=>O(this,n(...t))}}:{get(){let t=O(this,s);return i(this,e,{value:t}),t}}}return n=s({},b),r(e,n),e}},o=t>0,u=(t,e)=>o?{open:`[${t}m`,close:`[${e}m`}:h,l=t=>e=>t(...c(e)),m=(t,e)=>(n,i,r)=>u(`${t}8;2;${n};${i};${r}`,e),w=(t,e)=>(n,i,r)=>u(((t,e,n)=>f(p(t,e,n)))(n,i,r)+t,e),x=t=>(e,n,i)=>t(p(e,n,i)),P=m(3,g),E=m(4,y),_=t=>u("38;5;"+t,g),j=t=>u("48;5;"+t,y);2===t?(P=x(_),E=x(j)):1===t&&(P=w(0,g),E=w(10,y),_=t=>u(f(t),g),j=t=>u(f(t)+10,y));let R,q={fg:_,bg:j,rgb:P,bgRgb:E,hex:l(P),bgHex:l(E),visible:h,reset:u(0,0),bold:u(1,22),dim:u(2,22),italic:u(3,23),underline:u(4,24),inverse:u(7,27),hidden:u(8,28),strikethrough:u(9,29)},S="Bright";return"black,red,green,yellow,blue,magenta,cyan,white,gray".split(",").map(((t,e)=>{R="bg"+t[0].toUpperCase()+t.slice(1),8>e?(q[t+S]=u(90+e,g),q[R+S]=u(100+e,y)):e=60,q[t]=u(30+e,g),q[R]=u(40+e,y)})),e.extend(q)},x=new v;return w.exports=x,x.default=x,w.exports}var b=g(y());function O(t){return t.length}function v(t,e){const n="function"==typeof e?e(t):e,{dir:i,base:r}=f.default.parse(t),s=i?i+"/":"";return n.replace(/\[path\]/,s).replace(/\[base\]/,r)}function x(t){return/^\\\\\?\\/.test(t)?t:t.replace(/\\/g,"/")}const P=new TextEncoder;function E(t){return"string"==typeof t?P.encode(t):t}function _(){}function j(t){const e=t in h.default?t:"gzip";return{algorithm:d.default.promisify(h.default[e])}}async function R(t,e,n){try{return await e(t,n)}catch(t){return Promise.reject(t)}}const q={gzip:{level:h.default.constants.Z_BEST_COMPRESSION},brotliCompress:{params:{[h.default.constants.BROTLI_PARAM_QUALITY]:h.default.constants.BROTLI_MAX_QUALITY}},deflate:{level:h.default.constants.Z_BEST_COMPRESSION},deflateRaw:{level:h.default.constants.Z_BEST_COMPRESSION}};class S{constructor(t){this.maxConcurrent=t,this.queue=[],this.errors=[],this.running=0}enqueue(t){this.queue.push(t),this.run()}async run(){for(;this.running<this.maxConcurrent&&this.queue.length;){const t=this.queue.shift();this.running++;try{await t()}catch(t){this.errors.push(t)}finally{this.running--,this.run()}}}async wait(){for(;this.running;)await new Promise((t=>setTimeout(t,0)));if(O(this.errors))throw new AggregateError(this.errors,"task failed")}}function T(t){return new S(t)}const z="vite-plugin-compression",M=(()=>{const t=p.default.cpus()||{length:1};return 1===t.length?10:Math.max(1,t.length-1)})();function C(t){const e=new Set,n=(t,e)=>x(f.default.resolve(t,e));if(t.build.rollupOptions?.output){(Array.isArray(t.build.rollupOptions.output)?t.build.rollupOptions.output:[t.build.rollupOptions.output]).forEach((i=>{("object"!=typeof i||O(Object.keys(i)))&&e.add(n(t.root,i.dir||t.build.outDir))}))}else e.add(n(t.root,t.build.outDir));return e}async function I(t,e){const n=!("copyPublicDir"in t.build)||t.build.copyPublicDir;if(t.publicDir&&n&&l.default.existsSync(t.publicDir)){const n=await async function(t){const e=await Promise.all((await c.default.readdir(t)).map((e=>f.default.join(t,e))));let n=0;const i=[];for(;n!==O(e);){const t=e[n],r=await c.default.stat(t);if(r.isDirectory()){const n=await c.default.readdir(t);e.push(...n.map((e=>f.default.join(t,e))))}r.isFile()&&i.push(t),n++}return i}(t.publicDir),i=f.default.join(t.root,f.default.relative(t.root,t.publicDir));n.forEach((t=>{const n=x(f.default.relative(i,t));e(n,t)}))}}function A(e={}){const{include:n=/\.(html|xml|css|json|js|mjs|svg|yaml|yml|toml)$/,exclude:i,threshold:r=0,algorithm:s="gzip",filename:o,compressionOptions:a,deleteOriginalAssets:u=!1,skipIfLargerOrEqual:l=!0}=e,p=t.createFilter(n,i),d=[],h=[],{msgs:g,cleanup:m}=function(){const t=[],e=process.stdout.write.bind(process.stdout);return process.stdout.write=function(...n){const[i]=n,r="string"==typeof i?i:i.toString();return r.includes("built in")?(t.push(r),!1):e.apply(this,n)},{cleanup:()=>process.stdout.write=e,msgs:t}}();let w,y=process.cwd();const x={algorithm:"string"==typeof s?j(s).algorithm:s,options:"function"==typeof s?a:Object.assign({},q[s],a),filename:o??("brotliCompress"===s?"[path][base].br":"[path][base].gz")},P=T(M),S=async function(t,e){for(const t in e){if(!p(t))continue;const n=e[t],i=E("asset"===n.type?n.source:n.code),s=O(i);s<r||P.enqueue((async()=>{const n=v(t,x.filename),r=await R(i,x.algorithm,x.options);l&&O(r)>=s||((u||t===n)&&Reflect.deleteProperty(e,t),this.emitFile({type:"asset",fileName:n,source:r}))}))}await P.wait().catch(this.error)},A={resolve:_},B={staticOutputs:new Set,done:new Promise((t=>{A.resolve=t}))},D=new Intl.NumberFormat("en",{maximumFractionDigits:2,minimumFractionDigits:2});return{name:z,apply:"build",enforce:"post",api:B,async configResolved(t){h.push(...C(t)),await I(t,(t=>{d.push(t)}));const e=t.plugins.find((t=>"vite:build-import-analysis"===t.name));if(!e)throw new Error("[vite-plugin-compression] Can't be work in versions lower than vite at 2.0.0");!function(t,e){const n=t.generateBundle;if("object"==typeof n&&n.handler){const t=n.handler;n.handler=async function(...n){await t.apply(this,n),await e.apply(this,n)}}"function"==typeof n&&(t.generateBundle=async function(...t){await n.apply(this,t),await e.apply(this,t)})}(e,S),w=t.logger,y=t.root},async closeBundle(){const t=[],e=async(e,n)=>{const i=f.default.join(e,n);if(!p(i)&&!B.staticOutputs.has(n))return void B.staticOutputs.add(n);const{size:s}=await c.default.stat(i);s<r?B.staticOutputs.has(n)||B.staticOutputs.add(n):await(async(e,n,i)=>{const r=await c.default.readFile(e),s=await R(r,x.algorithm,x.options);if(l&&O(s)>=O(r))return void(B.staticOutputs.has(n)||B.staticOutputs.add(n));const o=v(n,x.filename);B.staticOutputs.has(o)||B.staticOutputs.add(o);const a=f.default.join(i,o);u&&a!==e&&await c.default.rm(e,{recursive:!0,force:!0}),await c.default.writeFile(a,s),t.push({dest:f.default.relative(y,i)+"/",file:o,size:O(s)})})(i,n,e)};for(const t of h)for(const n of d)P.enqueue((()=>e(t,n)));if(await P.wait().catch((t=>t)),A.resolve(),m(),w){const e=t.reduce(((t,e)=>{const n=e.dest+e.file;return Math.max(t,n.length)}),0);for(const{dest:i,file:r,size:s}of t){const t=r.padEnd(e);w.info(b.dim(i)+b.green(t)+b.bold(b.dim((n=s,`${D.format(n/1e3)} kB`))))}}var n;for(const t of g)console.info(t)}}}A.getPluginAPI=t=>t.find((t=>t.name===z))?.api,exports.compression=A,exports.default=A,exports.defineCompressionOption=function(t){return t},exports.tarball=function(t={}){const{dest:e,gz:n=!1}=t,i=[],r=[];let o=[],a=process.cwd();const u=function(){const t=s.createPack(),e=[],n={dests:[],root:"",gz:!1};return{add:e=>{t.add(E(e.content),{filename:e.filename})},setup:t=>{Object.assign(n,t),n.dests.forEach((t=>{const i=x(f.default.resolve(n.root,t+".tar"+(n.gz?".gz":""))),r=x(f.default.dirname(i));x(n.root)!==r&&l.default.mkdirSync(r,{recursive:!0});const s=l.default.createWriteStream(i);e.push(s)}))},done:async()=>{t.done(),await Promise.all(e.map((e=>new Promise(((i,r)=>{e.on("error",r),e.on("finish",i),n.gz?t.receiver.pipe(h.default.createGzip()).pipe(e):t.receiver.pipe(e)}))))),e.length=0}}}(),p=T(M);let d;return{name:"vite-plugin-tarball",enforce:"post",async configResolved(t){r.push(...C(t)),a=t.root,o=e?[e]:r,d=A.getPluginAPI(t.plugins),d||await I(t,(t=>{i.push(t)})),u.setup({dests:o,root:a,gz:n})},writeBundle(t,e){for(const t in e){const n=e[t];u.add({filename:t,content:"asset"===n.type?n.source:n.code})}},async closeBundle(){d&&await d.done,!i.length&&d&&d.staticOutputs.size&&i.push(...d.staticOutputs);for(const t of r)for(const e of i)p.enqueue((async()=>{const n=f.default.join(t,e),i=await c.default.readFile(n);u.add({filename:e,content:i})}));await p.wait(),await u.done()}}};
